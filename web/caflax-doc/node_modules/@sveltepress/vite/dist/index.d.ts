import { PluginOption } from 'vite';
import { Highlighter, SveltepressVitePluginOptions } from './types.js';
export { LoadTheme, ResolvedTheme, SiteConfig } from './types.js';
import { Plugin } from 'unified';
import 'shiki/langs';

interface CompileOptions {
    mdContent: string;
    highlighter?: Highlighter;
    remarkPlugins?: Array<Plugin<any[], any> | [Plugin<any[], any>, any]>;
    rehypePlugins?: Plugin[];
    filename: string;
    footnoteLabel?: string;
}
declare function export_default({ mdContent, remarkPlugins, rehypePlugins, highlighter, filename, footnoteLabel, }: CompileOptions): Promise<{
    data: Record<string, any>;
    code: string;
}>;

declare function info(...messages: any[]): void;

declare const log_info: typeof info;
declare namespace log {
  export { log_info as info };
}

declare const sveltepress: (options?: SveltepressVitePluginOptions) => PluginOption;

export { Highlighter, SveltepressVitePluginOptions, log, export_default as mdToSvelte, sveltepress };
