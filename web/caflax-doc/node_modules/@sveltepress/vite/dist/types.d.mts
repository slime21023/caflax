import { BundledLanguage } from 'shiki/langs';
import { Plugin } from 'unified';
import { PluginOption } from 'vite';

type RemarkLiveCode = Plugin<[], any>;
type Highlighter = (code: string, lang: BundledLanguage, meta?: string) => string | Promise<string>;
interface SiteConfig {
    title?: string;
    description?: string;
}
interface ResolvedTheme {
    name: string;
    globalLayout: string;
    pageLayout: string;
    vitePlugins: PluginOption | ((corePlugin: PluginOption) => PluginOption[] | Promise<PluginOption[]>);
    highlighter: Highlighter;
    remarkPlugins?: Plugin[];
    rehypePlugins?: Plugin[];
    /**
     * The footnote label used for [remark rehype](https://github.com/remarkjs/remark-rehype#api)
     */
    footnoteLabel?: string;
}
interface SveltepressVitePluginOptions {
    theme?: ResolvedTheme;
    siteConfig?: SiteConfig;
    addInspect?: boolean;
    remarkPlugins?: Plugin[];
    rehypePlugins?: Plugin[];
}
type LoadTheme<ThemeOptions = any> = (themeOptions?: ThemeOptions) => ResolvedTheme;

export type { Highlighter, LoadTheme, RemarkLiveCode, ResolvedTheme, SiteConfig, SveltepressVitePluginOptions };
