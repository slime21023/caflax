var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { env } from 'node:process';
import { createTransformerFactory } from '@shikijs/twoslash';
import { createTwoslasher, rendererFloatingSvelte } from '@sveltepress/twoslash';
import { LRUCache } from 'lru-cache';
import { createHighlighter } from 'shiki';
import { themeOptionsRef } from '../index.js';
import { processCommands } from './commands.js';
var DEFAULT_SUPPORT_LANGUAGES = ['svelte', 'sh', 'js', 'html', 'ts', 'md', 'css', 'scss'];
var cache = new LRUCache({ max: 200 });
var shikiHighlighterInstance = {
    value: null,
};
var _highlighter = function (code, lang) { return __awaiter(void 0, void 0, void 0, function () {
    var highlighterConfig, darkTheme, lightTheme, shikiOptions, codeToHtml;
    var _a, _b, _c, _d;
    return __generator(this, function (_e) {
        highlighterConfig = (_a = themeOptionsRef.value) === null || _a === void 0 ? void 0 : _a.highlighter;
        darkTheme = (_b = highlighterConfig === null || highlighterConfig === void 0 ? void 0 : highlighterConfig.themeDark) !== null && _b !== void 0 ? _b : 'night-owl';
        lightTheme = (_c = highlighterConfig === null || highlighterConfig === void 0 ? void 0 : highlighterConfig.themeLight) !== null && _c !== void 0 ? _c : 'vitesse-light';
        shikiOptions = {
            lang: lang,
            themes: {
                dark: darkTheme,
                light: lightTheme,
            },
            transformers: [],
        };
        if (shikiHighlighterInstance.twoslashTransformer) {
            (_d = shikiOptions.transformers) === null || _d === void 0 ? void 0 : _d.push(shikiHighlighterInstance.twoslashTransformer);
        }
        codeToHtml = shikiHighlighterInstance.value.codeToHtml;
        return [2 /*return*/, codeToHtml(code, shikiOptions)
                .replace(/\{/g, '&#123;')
                .replace(/\}/g, '&#125;')
                .replace(/<!--svp-floating-snippet-start-->/g, '{#snippet floatingContent()}')
                .replace(/<!--svp-floating-snippet-end-->/g, '{/snippet}')];
    });
}); };
var highlighter = function (code, lang, meta) { return __awaiter(void 0, void 0, void 0, function () {
    var cacheKey, cached, metaArray, containLineNumbers, titleMeta, commandDoms, lines, noErrorsFirstLine, title, _a, _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                cacheKey = JSON.stringify({ code: code, lang: lang, meta: meta });
                if (env.NODE_ENV === 'development') {
                    cached = cache.get(cacheKey);
                    if (cached)
                        return [2 /*return*/, cached];
                }
                metaArray = (meta || '').split(' ');
                containLineNumbers = metaArray.some(function (item) { return item.trim() === 'ln'; });
                titleMeta = metaArray.find(function (item) { return item.startsWith('title='); });
                commandDoms = [];
                lines = code.split('\n');
                if (lines[0] === '// @noErrors')
                    noErrorsFirstLine = lines.shift();
                code = lines.map(function (line, i) {
                    var _a = processCommands(line, i, lines.length), commandDomsInOneLine = _a[0], newLine = _a[1];
                    commandDoms.push.apply(commandDoms, commandDomsInOneLine);
                    return newLine;
                }).join('\n');
                if (titleMeta)
                    title = titleMeta.split('=')[1].replace(/(^")|("$)/g, '');
                if (noErrorsFirstLine)
                    code = "".concat(noErrorsFirstLine, "\n").concat(code);
                _b = (_a = "\n<div class=\"svp-code-block-wrapper\">".concat(title
                    ? "<div class=\"svp-code-block--title\">".concat(title, "</div>\n")
                    : '', "\n  <div class=\"svp-code-block").concat(containLineNumbers ? ' svp-code-block--with-line-numbers' : '', "\">\n    ").concat(commandDoms.join('\n'), "\n    <!-- svelte-ignore a11y_no_noninteractive_tabindex -->\n    ")).concat;
                return [4 /*yield*/, _highlighter(code, lang, meta)];
            case 1:
                cached = _b.apply(_a, [_c.sent(), "\n    <div class=\"svp-code-block--lang\">\n      "]).concat(lang, "\n    </div>\n    <CopyCode />\n    ").concat(containLineNumbers ? "<div class=\"svp-code-block--line-numbers\">".concat(lines.map(function (_, i) { return "<div class=\"svp-code-block--line-number-item\">".concat(i + 1, "</div>"); }).join('\n'), "</div>") : '', "\n  </div>\n</div>");
                if (env.NODE_ENV === 'development')
                    cache.set(cacheKey, cached);
                return [2 /*return*/, cached];
        }
    });
}); };
export function initHighlighter() {
    return __awaiter(this, arguments, void 0, function (highlighterConfig) {
        var langs, darkTheme, lightTheme, _a, _b, _c;
        var _d, _e;
        if (highlighterConfig === void 0) { highlighterConfig = {}; }
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    langs = (highlighterConfig === null || highlighterConfig === void 0 ? void 0 : highlighterConfig.languages) || DEFAULT_SUPPORT_LANGUAGES;
                    darkTheme = (_d = highlighterConfig === null || highlighterConfig === void 0 ? void 0 : highlighterConfig.themeDark) !== null && _d !== void 0 ? _d : 'night-owl';
                    lightTheme = (_e = highlighterConfig === null || highlighterConfig === void 0 ? void 0 : highlighterConfig.themeLight) !== null && _e !== void 0 ? _e : 'vitesse-light';
                    _a = shikiHighlighterInstance;
                    return [4 /*yield*/, createHighlighter({
                            langs: langs,
                            themes: [darkTheme, lightTheme],
                        })];
                case 1:
                    _a.value = _f.sent();
                    if (!highlighterConfig.twoslash) return [3 /*break*/, 3];
                    _b = shikiHighlighterInstance;
                    _c = createTransformerFactory;
                    return [4 /*yield*/, createTwoslasher(highlighterConfig.twoslash === true
                            ? {
                                compilerOptions: {
                                    module: 199,
                                    moduleResolution: 99,
                                    jsx: 1,
                                    types: ['@sveltepress/vite/types', '@sveltepress/theme-default/types', '@sveltepress/theme-default/components', '@sveltejs/kit'],
                                },
                            }
                            : highlighterConfig.twoslash)];
                case 2:
                    _b.twoslashTransformer = _c.apply(void 0, [_f.sent()])({
                        langs: ['ts', 'tsx', 'svelte'],
                        renderer: rendererFloatingSvelte(),
                    });
                    _f.label = 3;
                case 3: return [2 /*return*/];
            }
        });
    });
}
export default highlighter;
